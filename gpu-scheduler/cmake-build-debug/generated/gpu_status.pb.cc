// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: gpu_status.proto
// Protobuf C++ Version: 5.29.3

#include "gpu_status.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cabinet {

inline constexpr TaskStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : submit_time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        start_time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gpu_req_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        completion_time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        task_id_{0},
        assigned_board_{0},
        status_{0},
        deadline_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TaskStatus::TaskStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TaskStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskStatusDefaultTypeInternal() {}
  union {
    TaskStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskStatusDefaultTypeInternal _TaskStatus_default_instance_;

inline constexpr Reply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : reply_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Reply::Reply(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplyDefaultTypeInternal() {}
  union {
    Reply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplyDefaultTypeInternal _Reply_default_instance_;

inline constexpr GpuStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : board_id_{0},
        available_gp_us_{0},
        current_load_{0},
        job_queue_length_{0},
        memory_usage_{0},
        temperature_{0},
        clock_freq_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GpuStatus::GpuStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GpuStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GpuStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GpuStatusDefaultTypeInternal() {}
  union {
    GpuStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GpuStatusDefaultTypeInternal _GpuStatus_default_instance_;
}  // namespace cabinet
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_gpu_5fstatus_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_gpu_5fstatus_2eproto = nullptr;
const ::uint32_t
    TableStruct_gpu_5fstatus_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cabinet::GpuStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cabinet::GpuStatus, _impl_.board_id_),
        PROTOBUF_FIELD_OFFSET(::cabinet::GpuStatus, _impl_.available_gp_us_),
        PROTOBUF_FIELD_OFFSET(::cabinet::GpuStatus, _impl_.current_load_),
        PROTOBUF_FIELD_OFFSET(::cabinet::GpuStatus, _impl_.job_queue_length_),
        PROTOBUF_FIELD_OFFSET(::cabinet::GpuStatus, _impl_.memory_usage_),
        PROTOBUF_FIELD_OFFSET(::cabinet::GpuStatus, _impl_.temperature_),
        PROTOBUF_FIELD_OFFSET(::cabinet::GpuStatus, _impl_.clock_freq_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cabinet::TaskStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cabinet::TaskStatus, _impl_.task_id_),
        PROTOBUF_FIELD_OFFSET(::cabinet::TaskStatus, _impl_.assigned_board_),
        PROTOBUF_FIELD_OFFSET(::cabinet::TaskStatus, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::cabinet::TaskStatus, _impl_.submit_time_),
        PROTOBUF_FIELD_OFFSET(::cabinet::TaskStatus, _impl_.start_time_),
        PROTOBUF_FIELD_OFFSET(::cabinet::TaskStatus, _impl_.gpu_req_),
        PROTOBUF_FIELD_OFFSET(::cabinet::TaskStatus, _impl_.deadline_),
        PROTOBUF_FIELD_OFFSET(::cabinet::TaskStatus, _impl_.completion_time_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cabinet::Reply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cabinet::Reply, _impl_.reply_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cabinet::GpuStatus)},
        {15, -1, -1, sizeof(::cabinet::TaskStatus)},
        {31, -1, -1, sizeof(::cabinet::Reply)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cabinet::_GpuStatus_default_instance_._instance,
    &::cabinet::_TaskStatus_default_instance_._instance,
    &::cabinet::_Reply_default_instance_._instance,
};
const char descriptor_table_protodef_gpu_5fstatus_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020gpu_status.proto\022\007cabinet\"\245\001\n\tGpuStatu"
    "s\022\020\n\010board_id\030\001 \001(\005\022\027\n\017available_gp_us\030\002"
    " \001(\005\022\024\n\014current_load\030\003 \001(\002\022\030\n\020job_queue_"
    "length\030\004 \001(\005\022\024\n\014memory_usage\030\005 \001(\002\022\023\n\013te"
    "mperature\030\006 \001(\002\022\022\n\nclock_freq\030\007 \001(\002\"\252\001\n\n"
    "TaskStatus\022\017\n\007task_id\030\001 \001(\005\022\026\n\016assigned_"
    "board\030\002 \001(\005\022\016\n\006status\030\003 \001(\005\022\023\n\013submit_ti"
    "me\030\004 \001(\t\022\022\n\nstart_time\030\005 \001(\t\022\017\n\007gpu_req\030"
    "\006 \001(\t\022\020\n\010deadline\030\007 \001(\005\022\027\n\017completion_ti"
    "me\030\010 \001(\t\"\026\n\005Reply\022\r\n\005reply\030\001 \001(\t2\?\n\tSche"
    "duler\0222\n\013ExecuteTask\022\023.cabinet.TaskStatu"
    "s\032\016.cabinet.Replyb\006proto3"
};
static ::absl::once_flag descriptor_table_gpu_5fstatus_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_gpu_5fstatus_2eproto = {
    false,
    false,
    465,
    descriptor_table_protodef_gpu_5fstatus_2eproto,
    "gpu_status.proto",
    &descriptor_table_gpu_5fstatus_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_gpu_5fstatus_2eproto::offsets,
    file_level_enum_descriptors_gpu_5fstatus_2eproto,
    file_level_service_descriptors_gpu_5fstatus_2eproto,
};
namespace cabinet {
// ===================================================================

class GpuStatus::_Internal {
 public:
};

GpuStatus::GpuStatus(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cabinet.GpuStatus)
}
GpuStatus::GpuStatus(
    ::google::protobuf::Arena* arena, const GpuStatus& from)
    : GpuStatus(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GpuStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GpuStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, board_id_),
           0,
           offsetof(Impl_, clock_freq_) -
               offsetof(Impl_, board_id_) +
               sizeof(Impl_::clock_freq_));
}
GpuStatus::~GpuStatus() {
  // @@protoc_insertion_point(destructor:cabinet.GpuStatus)
  SharedDtor(*this);
}
inline void GpuStatus::SharedDtor(MessageLite& self) {
  GpuStatus& this_ = static_cast<GpuStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GpuStatus::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GpuStatus(arena);
}
constexpr auto GpuStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GpuStatus),
                                            alignof(GpuStatus));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GpuStatus::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GpuStatus_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GpuStatus::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GpuStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GpuStatus::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GpuStatus>(), &GpuStatus::ByteSizeLong,
            &GpuStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GpuStatus, _impl_._cached_size_),
        false,
    },
    &GpuStatus::kDescriptorMethods,
    &descriptor_table_gpu_5fstatus_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GpuStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> GpuStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cabinet::GpuStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 board_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GpuStatus, _impl_.board_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GpuStatus, _impl_.board_id_)}},
    // int32 available_gp_us = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GpuStatus, _impl_.available_gp_us_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GpuStatus, _impl_.available_gp_us_)}},
    // float current_load = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(GpuStatus, _impl_.current_load_)}},
    // int32 job_queue_length = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GpuStatus, _impl_.job_queue_length_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GpuStatus, _impl_.job_queue_length_)}},
    // float memory_usage = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(GpuStatus, _impl_.memory_usage_)}},
    // float temperature = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(GpuStatus, _impl_.temperature_)}},
    // float clock_freq = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(GpuStatus, _impl_.clock_freq_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 board_id = 1;
    {PROTOBUF_FIELD_OFFSET(GpuStatus, _impl_.board_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 available_gp_us = 2;
    {PROTOBUF_FIELD_OFFSET(GpuStatus, _impl_.available_gp_us_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float current_load = 3;
    {PROTOBUF_FIELD_OFFSET(GpuStatus, _impl_.current_load_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // int32 job_queue_length = 4;
    {PROTOBUF_FIELD_OFFSET(GpuStatus, _impl_.job_queue_length_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float memory_usage = 5;
    {PROTOBUF_FIELD_OFFSET(GpuStatus, _impl_.memory_usage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float temperature = 6;
    {PROTOBUF_FIELD_OFFSET(GpuStatus, _impl_.temperature_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float clock_freq = 7;
    {PROTOBUF_FIELD_OFFSET(GpuStatus, _impl_.clock_freq_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GpuStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:cabinet.GpuStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.board_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.clock_freq_) -
      reinterpret_cast<char*>(&_impl_.board_id_)) + sizeof(_impl_.clock_freq_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GpuStatus::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GpuStatus& this_ = static_cast<const GpuStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GpuStatus::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GpuStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cabinet.GpuStatus)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 board_id = 1;
          if (this_._internal_board_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_board_id(), target);
          }

          // int32 available_gp_us = 2;
          if (this_._internal_available_gp_us() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_available_gp_us(), target);
          }

          // float current_load = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_current_load()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_current_load(), target);
          }

          // int32 job_queue_length = 4;
          if (this_._internal_job_queue_length() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_job_queue_length(), target);
          }

          // float memory_usage = 5;
          if (::absl::bit_cast<::uint32_t>(this_._internal_memory_usage()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_memory_usage(), target);
          }

          // float temperature = 6;
          if (::absl::bit_cast<::uint32_t>(this_._internal_temperature()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_temperature(), target);
          }

          // float clock_freq = 7;
          if (::absl::bit_cast<::uint32_t>(this_._internal_clock_freq()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                7, this_._internal_clock_freq(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cabinet.GpuStatus)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GpuStatus::ByteSizeLong(const MessageLite& base) {
          const GpuStatus& this_ = static_cast<const GpuStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GpuStatus::ByteSizeLong() const {
          const GpuStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cabinet.GpuStatus)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 board_id = 1;
            if (this_._internal_board_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_board_id());
            }
            // int32 available_gp_us = 2;
            if (this_._internal_available_gp_us() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_available_gp_us());
            }
            // float current_load = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_current_load()) != 0) {
              total_size += 5;
            }
            // int32 job_queue_length = 4;
            if (this_._internal_job_queue_length() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_job_queue_length());
            }
            // float memory_usage = 5;
            if (::absl::bit_cast<::uint32_t>(this_._internal_memory_usage()) != 0) {
              total_size += 5;
            }
            // float temperature = 6;
            if (::absl::bit_cast<::uint32_t>(this_._internal_temperature()) != 0) {
              total_size += 5;
            }
            // float clock_freq = 7;
            if (::absl::bit_cast<::uint32_t>(this_._internal_clock_freq()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GpuStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GpuStatus*>(&to_msg);
  auto& from = static_cast<const GpuStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cabinet.GpuStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_board_id() != 0) {
    _this->_impl_.board_id_ = from._impl_.board_id_;
  }
  if (from._internal_available_gp_us() != 0) {
    _this->_impl_.available_gp_us_ = from._impl_.available_gp_us_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_current_load()) != 0) {
    _this->_impl_.current_load_ = from._impl_.current_load_;
  }
  if (from._internal_job_queue_length() != 0) {
    _this->_impl_.job_queue_length_ = from._impl_.job_queue_length_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_memory_usage()) != 0) {
    _this->_impl_.memory_usage_ = from._impl_.memory_usage_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_temperature()) != 0) {
    _this->_impl_.temperature_ = from._impl_.temperature_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_clock_freq()) != 0) {
    _this->_impl_.clock_freq_ = from._impl_.clock_freq_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GpuStatus::CopyFrom(const GpuStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cabinet.GpuStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GpuStatus::InternalSwap(GpuStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GpuStatus, _impl_.clock_freq_)
      + sizeof(GpuStatus::_impl_.clock_freq_)
      - PROTOBUF_FIELD_OFFSET(GpuStatus, _impl_.board_id_)>(
          reinterpret_cast<char*>(&_impl_.board_id_),
          reinterpret_cast<char*>(&other->_impl_.board_id_));
}

::google::protobuf::Metadata GpuStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TaskStatus::_Internal {
 public:
};

TaskStatus::TaskStatus(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cabinet.TaskStatus)
}
inline PROTOBUF_NDEBUG_INLINE TaskStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cabinet::TaskStatus& from_msg)
      : submit_time_(arena, from.submit_time_),
        start_time_(arena, from.start_time_),
        gpu_req_(arena, from.gpu_req_),
        completion_time_(arena, from.completion_time_),
        _cached_size_{0} {}

TaskStatus::TaskStatus(
    ::google::protobuf::Arena* arena,
    const TaskStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TaskStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, task_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, task_id_),
           offsetof(Impl_, deadline_) -
               offsetof(Impl_, task_id_) +
               sizeof(Impl_::deadline_));

  // @@protoc_insertion_point(copy_constructor:cabinet.TaskStatus)
}
inline PROTOBUF_NDEBUG_INLINE TaskStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : submit_time_(arena),
        start_time_(arena),
        gpu_req_(arena),
        completion_time_(arena),
        _cached_size_{0} {}

inline void TaskStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, task_id_),
           0,
           offsetof(Impl_, deadline_) -
               offsetof(Impl_, task_id_) +
               sizeof(Impl_::deadline_));
}
TaskStatus::~TaskStatus() {
  // @@protoc_insertion_point(destructor:cabinet.TaskStatus)
  SharedDtor(*this);
}
inline void TaskStatus::SharedDtor(MessageLite& self) {
  TaskStatus& this_ = static_cast<TaskStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.submit_time_.Destroy();
  this_._impl_.start_time_.Destroy();
  this_._impl_.gpu_req_.Destroy();
  this_._impl_.completion_time_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TaskStatus::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TaskStatus(arena);
}
constexpr auto TaskStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TaskStatus),
                                            alignof(TaskStatus));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TaskStatus::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TaskStatus_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TaskStatus::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TaskStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TaskStatus::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TaskStatus>(), &TaskStatus::ByteSizeLong,
            &TaskStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TaskStatus, _impl_._cached_size_),
        false,
    },
    &TaskStatus::kDescriptorMethods,
    &descriptor_table_gpu_5fstatus_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TaskStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 78, 2> TaskStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cabinet::TaskStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string completion_time = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(TaskStatus, _impl_.completion_time_)}},
    // int32 task_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TaskStatus, _impl_.task_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TaskStatus, _impl_.task_id_)}},
    // int32 assigned_board = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TaskStatus, _impl_.assigned_board_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TaskStatus, _impl_.assigned_board_)}},
    // int32 status = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TaskStatus, _impl_.status_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TaskStatus, _impl_.status_)}},
    // string submit_time = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(TaskStatus, _impl_.submit_time_)}},
    // string start_time = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(TaskStatus, _impl_.start_time_)}},
    // string gpu_req = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(TaskStatus, _impl_.gpu_req_)}},
    // int32 deadline = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TaskStatus, _impl_.deadline_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(TaskStatus, _impl_.deadline_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 task_id = 1;
    {PROTOBUF_FIELD_OFFSET(TaskStatus, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 assigned_board = 2;
    {PROTOBUF_FIELD_OFFSET(TaskStatus, _impl_.assigned_board_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 status = 3;
    {PROTOBUF_FIELD_OFFSET(TaskStatus, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string submit_time = 4;
    {PROTOBUF_FIELD_OFFSET(TaskStatus, _impl_.submit_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string start_time = 5;
    {PROTOBUF_FIELD_OFFSET(TaskStatus, _impl_.start_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string gpu_req = 6;
    {PROTOBUF_FIELD_OFFSET(TaskStatus, _impl_.gpu_req_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 deadline = 7;
    {PROTOBUF_FIELD_OFFSET(TaskStatus, _impl_.deadline_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string completion_time = 8;
    {PROTOBUF_FIELD_OFFSET(TaskStatus, _impl_.completion_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\0\0\0\13\12\7\0\17\0\0\0\0\0\0\0"
    "cabinet.TaskStatus"
    "submit_time"
    "start_time"
    "gpu_req"
    "completion_time"
  }},
};

PROTOBUF_NOINLINE void TaskStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:cabinet.TaskStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.submit_time_.ClearToEmpty();
  _impl_.start_time_.ClearToEmpty();
  _impl_.gpu_req_.ClearToEmpty();
  _impl_.completion_time_.ClearToEmpty();
  ::memset(&_impl_.task_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.deadline_) -
      reinterpret_cast<char*>(&_impl_.task_id_)) + sizeof(_impl_.deadline_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TaskStatus::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TaskStatus& this_ = static_cast<const TaskStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TaskStatus::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TaskStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cabinet.TaskStatus)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 task_id = 1;
          if (this_._internal_task_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_task_id(), target);
          }

          // int32 assigned_board = 2;
          if (this_._internal_assigned_board() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_assigned_board(), target);
          }

          // int32 status = 3;
          if (this_._internal_status() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_status(), target);
          }

          // string submit_time = 4;
          if (!this_._internal_submit_time().empty()) {
            const std::string& _s = this_._internal_submit_time();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cabinet.TaskStatus.submit_time");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string start_time = 5;
          if (!this_._internal_start_time().empty()) {
            const std::string& _s = this_._internal_start_time();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cabinet.TaskStatus.start_time");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string gpu_req = 6;
          if (!this_._internal_gpu_req().empty()) {
            const std::string& _s = this_._internal_gpu_req();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cabinet.TaskStatus.gpu_req");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // int32 deadline = 7;
          if (this_._internal_deadline() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_deadline(), target);
          }

          // string completion_time = 8;
          if (!this_._internal_completion_time().empty()) {
            const std::string& _s = this_._internal_completion_time();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cabinet.TaskStatus.completion_time");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cabinet.TaskStatus)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TaskStatus::ByteSizeLong(const MessageLite& base) {
          const TaskStatus& this_ = static_cast<const TaskStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TaskStatus::ByteSizeLong() const {
          const TaskStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cabinet.TaskStatus)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string submit_time = 4;
            if (!this_._internal_submit_time().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_submit_time());
            }
            // string start_time = 5;
            if (!this_._internal_start_time().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_start_time());
            }
            // string gpu_req = 6;
            if (!this_._internal_gpu_req().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_gpu_req());
            }
            // string completion_time = 8;
            if (!this_._internal_completion_time().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_completion_time());
            }
            // int32 task_id = 1;
            if (this_._internal_task_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_task_id());
            }
            // int32 assigned_board = 2;
            if (this_._internal_assigned_board() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_assigned_board());
            }
            // int32 status = 3;
            if (this_._internal_status() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_status());
            }
            // int32 deadline = 7;
            if (this_._internal_deadline() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_deadline());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TaskStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TaskStatus*>(&to_msg);
  auto& from = static_cast<const TaskStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cabinet.TaskStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_submit_time().empty()) {
    _this->_internal_set_submit_time(from._internal_submit_time());
  }
  if (!from._internal_start_time().empty()) {
    _this->_internal_set_start_time(from._internal_start_time());
  }
  if (!from._internal_gpu_req().empty()) {
    _this->_internal_set_gpu_req(from._internal_gpu_req());
  }
  if (!from._internal_completion_time().empty()) {
    _this->_internal_set_completion_time(from._internal_completion_time());
  }
  if (from._internal_task_id() != 0) {
    _this->_impl_.task_id_ = from._impl_.task_id_;
  }
  if (from._internal_assigned_board() != 0) {
    _this->_impl_.assigned_board_ = from._impl_.assigned_board_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_deadline() != 0) {
    _this->_impl_.deadline_ = from._impl_.deadline_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaskStatus::CopyFrom(const TaskStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cabinet.TaskStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TaskStatus::InternalSwap(TaskStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.submit_time_, &other->_impl_.submit_time_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.start_time_, &other->_impl_.start_time_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gpu_req_, &other->_impl_.gpu_req_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.completion_time_, &other->_impl_.completion_time_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TaskStatus, _impl_.deadline_)
      + sizeof(TaskStatus::_impl_.deadline_)
      - PROTOBUF_FIELD_OFFSET(TaskStatus, _impl_.task_id_)>(
          reinterpret_cast<char*>(&_impl_.task_id_),
          reinterpret_cast<char*>(&other->_impl_.task_id_));
}

::google::protobuf::Metadata TaskStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Reply::_Internal {
 public:
};

Reply::Reply(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cabinet.Reply)
}
inline PROTOBUF_NDEBUG_INLINE Reply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cabinet::Reply& from_msg)
      : reply_(arena, from.reply_),
        _cached_size_{0} {}

Reply::Reply(
    ::google::protobuf::Arena* arena,
    const Reply& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Reply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cabinet.Reply)
}
inline PROTOBUF_NDEBUG_INLINE Reply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : reply_(arena),
        _cached_size_{0} {}

inline void Reply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Reply::~Reply() {
  // @@protoc_insertion_point(destructor:cabinet.Reply)
  SharedDtor(*this);
}
inline void Reply::SharedDtor(MessageLite& self) {
  Reply& this_ = static_cast<Reply&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.reply_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Reply::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Reply(arena);
}
constexpr auto Reply::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Reply),
                                            alignof(Reply));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Reply::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Reply_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Reply::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Reply>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Reply::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Reply>(), &Reply::ByteSizeLong,
            &Reply::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Reply, _impl_._cached_size_),
        false,
    },
    &Reply::kDescriptorMethods,
    &descriptor_table_gpu_5fstatus_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Reply::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 27, 2> Reply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cabinet::Reply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string reply = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Reply, _impl_.reply_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string reply = 1;
    {PROTOBUF_FIELD_OFFSET(Reply, _impl_.reply_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\15\5\0\0\0\0\0\0"
    "cabinet.Reply"
    "reply"
  }},
};

PROTOBUF_NOINLINE void Reply::Clear() {
// @@protoc_insertion_point(message_clear_start:cabinet.Reply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reply_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Reply::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Reply& this_ = static_cast<const Reply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Reply::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Reply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cabinet.Reply)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string reply = 1;
          if (!this_._internal_reply().empty()) {
            const std::string& _s = this_._internal_reply();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cabinet.Reply.reply");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cabinet.Reply)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Reply::ByteSizeLong(const MessageLite& base) {
          const Reply& this_ = static_cast<const Reply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Reply::ByteSizeLong() const {
          const Reply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cabinet.Reply)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string reply = 1;
            if (!this_._internal_reply().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reply());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Reply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Reply*>(&to_msg);
  auto& from = static_cast<const Reply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cabinet.Reply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reply().empty()) {
    _this->_internal_set_reply(from._internal_reply());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Reply::CopyFrom(const Reply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cabinet.Reply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Reply::InternalSwap(Reply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reply_, &other->_impl_.reply_, arena);
}

::google::protobuf::Metadata Reply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace cabinet
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_gpu_5fstatus_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
