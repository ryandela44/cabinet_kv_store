// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: gpu_status.proto

package _go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GpuStatus struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BoardId        int32                  `protobuf:"varint,1,opt,name=board_id,json=boardId,proto3" json:"board_id,omitempty"`
	AvailableGpUs  int32                  `protobuf:"varint,2,opt,name=available_gp_us,json=availableGpUs,proto3" json:"available_gp_us,omitempty"`
	CurrentLoad    float32                `protobuf:"fixed32,3,opt,name=current_load,json=currentLoad,proto3" json:"current_load,omitempty"`
	JobQueueLength int32                  `protobuf:"varint,4,opt,name=job_queue_length,json=jobQueueLength,proto3" json:"job_queue_length,omitempty"`
	MemoryUsage    float32                `protobuf:"fixed32,5,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	Temperature    float32                `protobuf:"fixed32,6,opt,name=temperature,proto3" json:"temperature,omitempty"`
	ClockFreq      float32                `protobuf:"fixed32,7,opt,name=clock_freq,json=clockFreq,proto3" json:"clock_freq,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GpuStatus) Reset() {
	*x = GpuStatus{}
	mi := &file_gpu_status_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GpuStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpuStatus) ProtoMessage() {}

func (x *GpuStatus) ProtoReflect() protoreflect.Message {
	mi := &file_gpu_status_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpuStatus.ProtoReflect.Descriptor instead.
func (*GpuStatus) Descriptor() ([]byte, []int) {
	return file_gpu_status_proto_rawDescGZIP(), []int{0}
}

func (x *GpuStatus) GetBoardId() int32 {
	if x != nil {
		return x.BoardId
	}
	return 0
}

func (x *GpuStatus) GetAvailableGpUs() int32 {
	if x != nil {
		return x.AvailableGpUs
	}
	return 0
}

func (x *GpuStatus) GetCurrentLoad() float32 {
	if x != nil {
		return x.CurrentLoad
	}
	return 0
}

func (x *GpuStatus) GetJobQueueLength() int32 {
	if x != nil {
		return x.JobQueueLength
	}
	return 0
}

func (x *GpuStatus) GetMemoryUsage() float32 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *GpuStatus) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *GpuStatus) GetClockFreq() float32 {
	if x != nil {
		return x.ClockFreq
	}
	return 0
}

type TaskStatus struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TaskId         int32                  `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	AssignedBoard  int32                  `protobuf:"varint,2,opt,name=assigned_board,json=assignedBoard,proto3" json:"assigned_board,omitempty"`
	Status         int32                  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"` // 0: pending, 1: assigned/running, 2: completed
	SubmitTime     string                 `protobuf:"bytes,4,opt,name=submit_time,json=submitTime,proto3" json:"submit_time,omitempty"`
	StartTime      string                 `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	GpuReq         string                 `protobuf:"bytes,6,opt,name=gpu_req,json=gpuReq,proto3" json:"gpu_req,omitempty"`
	Deadline       int32                  `protobuf:"varint,7,opt,name=deadline,proto3" json:"deadline,omitempty"`
	CompletionTime string                 `protobuf:"bytes,8,opt,name=completion_time,json=completionTime,proto3" json:"completion_time,omitempty"` // empty if not completed
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TaskStatus) Reset() {
	*x = TaskStatus{}
	mi := &file_gpu_status_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatus) ProtoMessage() {}

func (x *TaskStatus) ProtoReflect() protoreflect.Message {
	mi := &file_gpu_status_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatus.ProtoReflect.Descriptor instead.
func (*TaskStatus) Descriptor() ([]byte, []int) {
	return file_gpu_status_proto_rawDescGZIP(), []int{1}
}

func (x *TaskStatus) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *TaskStatus) GetAssignedBoard() int32 {
	if x != nil {
		return x.AssignedBoard
	}
	return 0
}

func (x *TaskStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TaskStatus) GetSubmitTime() string {
	if x != nil {
		return x.SubmitTime
	}
	return ""
}

func (x *TaskStatus) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *TaskStatus) GetGpuReq() string {
	if x != nil {
		return x.GpuReq
	}
	return ""
}

func (x *TaskStatus) GetDeadline() int32 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

func (x *TaskStatus) GetCompletionTime() string {
	if x != nil {
		return x.CompletionTime
	}
	return ""
}

type Reply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reply         string                 `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Reply) Reset() {
	*x = Reply{}
	mi := &file_gpu_status_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_gpu_status_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_gpu_status_proto_rawDescGZIP(), []int{2}
}

func (x *Reply) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

var File_gpu_status_proto protoreflect.FileDescriptor

var file_gpu_status_proto_rawDesc = string([]byte{
	0x0a, 0x10, 0x67, 0x70, 0x75, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x22, 0xff, 0x01, 0x0a, 0x09,
	0x47, 0x70, 0x75, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x67, 0x70, 0x5f, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x47, 0x70, 0x55, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x61, 0x64, 0x12,
	0x28, 0x0a, 0x10, 0x6a, 0x6f, 0x62, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6a, 0x6f, 0x62, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x72, 0x65, 0x71, 0x22, 0x82, 0x02,
	0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x70, 0x75, 0x5f, 0x72, 0x65, 0x71, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x70, 0x75, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x1d, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x32, 0x3f, 0x0a, 0x09, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x12, 0x32,
	0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x13, 0x2e,
	0x63, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x1a, 0x0e, 0x2e, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_gpu_status_proto_rawDescOnce sync.Once
	file_gpu_status_proto_rawDescData []byte
)

func file_gpu_status_proto_rawDescGZIP() []byte {
	file_gpu_status_proto_rawDescOnce.Do(func() {
		file_gpu_status_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gpu_status_proto_rawDesc), len(file_gpu_status_proto_rawDesc)))
	})
	return file_gpu_status_proto_rawDescData
}

var file_gpu_status_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_gpu_status_proto_goTypes = []any{
	(*GpuStatus)(nil),  // 0: cabinet.GpuStatus
	(*TaskStatus)(nil), // 1: cabinet.TaskStatus
	(*Reply)(nil),      // 2: cabinet.Reply
}
var file_gpu_status_proto_depIdxs = []int32{
	1, // 0: cabinet.Scheduler.ExecuteTask:input_type -> cabinet.TaskStatus
	2, // 1: cabinet.Scheduler.ExecuteTask:output_type -> cabinet.Reply
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_gpu_status_proto_init() }
func file_gpu_status_proto_init() {
	if File_gpu_status_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gpu_status_proto_rawDesc), len(file_gpu_status_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gpu_status_proto_goTypes,
		DependencyIndexes: file_gpu_status_proto_depIdxs,
		MessageInfos:      file_gpu_status_proto_msgTypes,
	}.Build()
	File_gpu_status_proto = out.File
	file_gpu_status_proto_goTypes = nil
	file_gpu_status_proto_depIdxs = nil
}
